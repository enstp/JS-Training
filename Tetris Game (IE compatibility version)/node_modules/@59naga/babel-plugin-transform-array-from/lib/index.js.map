{"version":3,"sources":["../src/index.js"],"names":[],"mappings":";;;;;;AACA;;;;AACA;;;;;;;;AAGA,IAAM,WAAW,aAAG,YAAH,CAAgB,QAAQ,OAAR,CAAgB,gCAAhB,CAAhB,EAAmE,MAAnE,CAAX;AACN,IAAM,wBAAwB,SAAS,KAAT,CAAe,SAAS,OAAT,CAAiB,GAAjB,CAAf,CAAxB;AACN,IAAM,aAAa,YAAb;;;;;;;kBAMS;SAAO;AACpB,aAAS;AACP,8CAAe,MAAM;AACnB,YAAI,KAAK,GAAL,CAAS,QAAT,EAAmB,cAAnB,CAAkC,YAAlC,CAAJ,EAAqD;AACnD,eAAK,WAAL,CAAiB,6BAAY,mBAAZ,EAA8B,KAAK,IAAL,CAAU,SAAV,CAA/C,EADmD;SAArD;OAFK;;AAMP,eAAS;AACP,4BAAK,MAAM;;;;;;AACT,iCAAmB,KAAK,IAAL,CAAU,IAAV,0BAAnB,oGAAmC;kBAAxB,mBAAwB;;AACjC,kBAAM,cAAc,CAAC,KAAK,YAAL,IAAqB,EAArB,CAAD,CAA0B,CAA1B,KAAgC,EAAhC,CADa;AAEjC,kBAAM,OAAO,YAAY,EAAZ,IAAkB,YAAY,EAAZ,CAAe,IAAf,CAFE;AAGjC,kBAAI,SAAS,UAAT,EAAqB;AACvB,uBADuB;eAAzB;aAHF;;;;;;;;;;;;;;WADS;;AAST,cAAM,WAAW,EAAX,CATG;AAUT,mBAAS,IAAT,CAAc,sCAAgB,mCAA8B,qBAA9C,GAAd,EAVS;AAWT,eAAK,gBAAL,CAAsB,MAAtB,EAA8B,QAA9B,EAXS;SADJ;OAAT;KANF;;CADa","file":"index.js","sourcesContent":["// dependencies\nimport template from 'babel-template';\nimport fs from 'fs';\n\n// private\nconst polyfill = fs.readFileSync(require.resolve('@59naga/array.from/polyfill.js'), 'utf8');\nconst polyfillWithoutExport = polyfill.slice(polyfill.indexOf('('));\nconst defineName = '_arrayFrom';\n\n/**\n* @module babel-plugin-transform-array-from\n* @returns {babelPlugin} unknown\n*/\nexport default () => ({\n  visitor: {\n    CallExpression(path) {\n      if (path.get('callee').matchesPattern('Array.from')) {\n        path.replaceWith(template(`${defineName}($0)`)(path.node.arguments));\n      }\n    },\n    Program: {\n      exit(path) {\n        for (const node of path.node.body) {\n          const declaration = (node.declarations || [])[0] || {};\n          const name = declaration.id && declaration.id.name;\n          if (name === defineName) {\n            return;\n          }\n        }\n\n        const topNodes = [];\n        topNodes.push(template(`var ${defineName} = Array.from || ${polyfillWithoutExport}`)());\n        path.unshiftContainer('body', topNodes);\n      },\n    },\n  },\n});\n"]}